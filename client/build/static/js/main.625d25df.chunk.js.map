{"version":3,"sources":["redux-store/reduser.js","redux-store/store.js","Engine/Engine.js","Engine/Context.js","Engine/Wrapper.js","Pages/Authentication/Auth.js","Pages/Authentication/Registration.js","Pages/Header/Header.js","redux-store/action.js","Pages/SideBar/SideBar.js","Pages/Auxilary/Loading/Loading.SVG","Pages/Auxilary/Loading/Loading.js","Pages/Auxilary/ErrorPage/ErrorPage.js","Pages/Auxilary/Pagination/Pagination.js","Pages/MovieList/ItemList/Genres/DisplayGenres.js","Pages/MovieList/ItemList/DisplayItemList.js","Pages/MovieList/MovieCards/MovieCardSmall.js","Pages/MovieList/ItemList/ItemList.js","Pages/MovieList/MovieCards/ItemCardDetails.js","Pages/MovieList/MovieCards/RecomendationCard.js","Pages/MovieList/MovieItem/MovieDetails.js","Pages/Auxilary/Buttons/Buttons.js","Pages/MovieList/MyFavorite/DisplayFavorite.js","Pages/MovieList/MyFavorite/FetchFavorite.js","Pages/MovieList/Fork.js","Engine/ApiRouter.js","Engine/AuthentificationEngine.js","Engine/Validator.js","App.js","index.js"],"names":["initialState","movies","loading","errors","find","id","movieStore","index","i","length","reduser","state","action","type","payload","push","temp","slice","store","createStore","Engine","api_key","path","request","url","a","method","body","headers","credentials","transformToJSON","fetch","response","ok","console","log","json","err","Error","getImg","getPopularMovies","page","getBySearch","search","getByGenre","getMovieDetails","getRecommendations","value","JSON","stringify","React","createContext","Consumer","Provider","engine","Wrapper","MethodsServise","Wraped","props","authMethods","methods","ErrorBoundary","ErrorExist","error","errorInfo","this","setState","children","Component","useState","email","password","form","setForm","disabled","setDisabled","validationErr","setValidationError","history","useHistory","useEffect","result","Validator","validateLogin","Object","keys","className","htmlFor","placeholder","onChange","e","target","onClick","preventDefault","then","data","login","jwt","catch","str","city","phone","nick","setLoading","setError","success","setSuccess","validator","validateRegistartion","status","message","time","Promise","resolve","timer","timeout","setTimeout","setInterval","clearInterval","clearTimeout","role","buttons","setButtons","searchResults","setSearchResults","query","setQuery","fallingListCleaner","buttonAuthHandler","event","logout","token","results","map","item","original_title","searchHandler","FETCH_MOVIE_ERROR","connect","dispatch","ownProps","engineGetFavorite","getFavoriteMovie","getFavorite","UserStorage","FETCH_MOVIE","random","min","max","Math","trunc","to","Loading","src","ico","alt","ErrorPage","Pagination","current_page","total_page","itteractingWithPage","paginations","setPaginations","newArr","arr","shift","sort","b","createPagination","GenresCategorie","setData","getData","genres","name","DisplayItems","View","getParamsPage","match","params","fetchData","prevProps","prevState","total_pages","MovieCardSmall","width","height","poster_path","overview","substring","vote_average","movie_data","ItemList","toRender","setToRender","render","transformData","ItemCardDetails","title","release_date","backdrop_path","budget","revenue","popularity","runtime","production_companies","adult","original_language","RecomendationCard","recommendations","getImage","dataToRender","setDataToRender","itemId","style","MovieDetails","onError","getId","urls","all","forEach","el","snapshot","movie_id","withRouter","engineRemoveFavorite","engineAddFavorite","removeFromFavorite","REMOVE_MOVIE","DELETE_MOVIE_FROM_FAVORITE","addToFavorite","ADD_MOVIE_TO_FAVORITE","add","remove","buttonState","setButtonState","changeButton","undefined","idx","DisplayFavorite","renderItem","ShowFavorite","FetchFavorite","SearchMovies","PopularMovies","GenresMovies","GenresCategories","MovieDetail","ApiRouter","exact","Auth","Registration","AuthentificationEngine","setToken","setId","storeName","useCallback","movieData","movie","localStorage","setItem","clear","localStorageData","parse","getItem","schema","string","dataError","test","App","apiRouter","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.625d25df.chunk.js","sourcesContent":["let initialState = {movies: [], loading: true, errors: null}\r\nconst find=(id,movieStore)=>{\r\n    let index=-1;\r\n    for(let i=0;i<movieStore.length;i++){\r\n        if(movieStore[i].id === id){\r\n            index=i;\r\n        }\r\n    }\r\n    return index;\r\n}\r\nconst reduser = ( state=initialState,action)=>{\r\n          switch (action.type) {\r\n              case('FETCH_MOVIE_REQUEST'):return {...state, loading:true, errors:null}\r\n              case('FETCH_MOVIE_LOADED'):return {movies: action.payload, loading:false, errors:null}\r\n              case('FETCH_MOVIE_ERROR'):return {movies: state.movies, loading:false, errors:action.payload}\r\n              case ('ADD_MOVIE'): {\r\n                  let movies = state.movies\r\n                  movies.push(action.payload)\r\n                  const temp ={ errors:null, movies:movies,loading: false}\r\n                  return temp;}\r\n              case ('REMOVE_MOVIE'): {\r\n                  let index = find(action.payload.id,state.movies)\r\n                  let temp = {errors:null,loading: false, movies:[...state.movies.slice(0, index), ...state.movies.slice(index + 1)]}\r\n                  return temp;\r\n              }\r\n              default:return state;\r\n          }\r\n}\r\nexport default reduser\r\n","import {createStore} from 'redux'\r\nimport reduser from \"./reduser\";\r\nconst store = createStore(reduser)\r\nexport default store;","export default class Engine {\r\n    api_key=\"39a8f3cf691a2a2d1a329867c1095d19\";//api key to hot acces\r\n    path = \"https://api.themoviedb.org/3/\"//part of rbase route\r\n    request = async (url, method = \"GET\", body = null, headers = {}) => {\r\n        try {\r\n            //if body ecxyst and server true send request to DB(logining, registration, tune favorite movie which save in mongo db\r\n            if (body !== null||headers.credentials){\r\n                {\r\n                if(body){\r\n                    body = this.transformToJSON(body)\r\n                    headers['Content-type'] = 'application/json';}\r\n                 }\r\n                let response = await fetch(url, {method, body, headers});\r\n                //tuned and request sent with data\r\n                //handling results\r\n                if (!response.ok) {\r\n                    console.log(\"Trouble in server side\")\r\n                    let err = await response.json()\r\n                    throw err.errors\r\n                }else{\r\n                    return await response.json()\r\n                }\r\n            } else {\r\n                //else mace request to movie db\r\n                let response = await fetch(`${this.path}${url}`);\r\n                //tuned and request sent with data\r\n                //handling results\r\n                if (!response.ok) {\r\n                    console.log(\"can't fetch response\")\r\n                    let err = await response.json()\r\n                    throw new Error(err.errors)\r\n                }\r\n                return await response.json()\r\n            }\r\n        } catch (e) {throw e}\r\n    }\r\n\r\n    transformToJSON(value) {return JSON.stringify(value)};\r\n    getImg=(id)=>{return `https://www.themoviedb.org/t/p/w300_and_h450_bestv2${id}`}\r\n    getPopularMovies = async (page) => {\r\n        //Serch data by requirered url and transform data - get only requiered info\r\n        let temp = await this.request(`movie/popular?api_key=${this.api_key}&language=en-US&page=${page}`);\r\n        return temp;\r\n    };\r\n    getBySearch = async (page,search) => {\r\n        //Serch data by requirered url and query params and transform data - get only requiered info\r\n        if(search&&page){return await this.request(`search/movie?api_key=${this.api_key}&language=en-US&query=${search}&page=${page}`);}\r\n        return await this.request(`search/movie?api_key=${this.api_key}&language=en-US&query=${search}`);\r\n    }\r\n    getByGenre = async (page,search) => {\r\n        //Serch data by requirered url and transform data - get only requiered info\r\n        if(search&&page){\r\n            return await this.request(`discover/movie?api_key=${this.api_key}&language=en-US&&include_adult=false&&page=${page}&with_genres=${search}`)\r\n        }\r\n       return await this.request(`genre/movie/list?api_key=${this.api_key}&language=en-US`);\r\n    }\r\n    getMovieDetails = async (id) => {\r\n        //Serch data by requirered url and transform data - get only requiered info\r\n        return await this.request(`movie/${id}?api_key=${this.api_key}&language=en-US`);\r\n    }\r\n    getRecommendations = async (id) => {\r\n        //Serch data by requirered url and transform data - get only requiered info\r\n        return await this.request(`movie/${id}/recommendations?api_key=${this.api_key}&language=en-US&language=en-US&page=1`);\r\n    }\r\n\r\n}\r\n","import React from 'react'\r\nconst {Consumer,Provider} = React.createContext()\r\n\r\nexport {Consumer,Provider};","import React from \"react\";\r\nimport {Consumer, Engine} from \"./index\";\r\n//to apply store, engine, auth methods in required component\r\n//feed it to higher order components\r\n\r\nconst engine = new Engine()\r\n\r\nlet Wrapper = (MethodsServise) => (Wraped)=> {\r\n    return (props) => {\r\n        return (\r\n            <Consumer>{(authMethods) => {\r\n                const methods = (MethodsServise) ? {...MethodsServise(engine),engine,...authMethods}:{...authMethods,engine}\r\n                return (<Wraped {...props} { ...methods}/>)\r\n            }}</Consumer>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Wrapper;\r\n\r\n\r\n\r\n\r\n","import React,{useState,useEffect,Component} from 'react';\r\nimport Wrapper from \"../../Engine/Wrapper\";\r\nimport {Validator} from \"../../Engine/index\";\r\nimport {useHistory} from \"react-router\";\r\nimport {ErrorPage} from \"../index\";\r\nimport \"./AuthStyles.css\"\r\nclass ErrorBoundary extends Component {\r\n    state = {ErrorExist: false}\r\n    componentDidCatch(error, errorInfo) {this.setState({ErrorExist: !this.state.ErrorExist})}\r\n    render() {\r\n        if (this.state.ErrorExist) {return <ErrorPage/>}\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nconst Auth=(props)=>{\r\n    const [form,setForm] = useState({email:\"\",password:\"\"});\r\n    const [disabled,setDisabled] = useState(\"disabled\");\r\n    const [validationErr,setValidationError] = useState({})\r\n    const history=useHistory()\r\n    //state to control page\r\n    //use effect co check forms in all update\r\n    useEffect(()=>{\r\n        const validator= new Validator();\r\n        let result = validator.validateLogin(form);\r\n             setValidationError({...result})\r\n        if(Object.keys(result).length===0){setDisabled(null);\r\n            setValidationError({})\r\n        }else{\r\n            setValidationError({...result})\r\n            setDisabled(\"disabled\")}\r\n    },[form])\r\n\r\n    //on loginning this function login and dowland data\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n\r\n        const data = props.engine.request(\"https://yermolaiev-movie-db.herokuapp.com/api/login\",\"POST\",form,{})\r\n        data.then(data=>{\r\n            props.login(data.jwt,data.id)\r\n            history.push(\"/popular/1\")\r\n            }\r\n        ).catch((err)=>{\r\n            let str = `some where occurred mistake - ${err}`\r\n            setValidationError({email: str})\r\n            })\r\n    }\r\n\r\n    return(\r\n        <ErrorBoundary>\r\n            <div className={\"forms\"}>\r\n        <form>\r\n            <fieldset>\r\n                <legend ><h4 className={\"text-secondary fw-bold\"}>User authentication</h4></legend>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"exampleInputEmail1\" className=\"form-label mt-3 fst-italic\">Email address</label>\r\n                    <input type=\"email\" className=\"form-control auth-input\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"\r\n                           placeholder=\"Enter email\"  onChange={(e)=>setForm({...form,email:e.target.value})}/>\r\n\r\n                    <small className=\"auth-error text-danger fst-italic\">{validationErr?.email&&form.email.length>1?validationErr.email:null}</small>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"exampleInputPassword1\" className=\"form-label mt-4 fst-italic\">Password</label>\r\n                    <input type=\"password\" className=\"form-control auth-input\" id=\"exampleInputPassword1\" placeholder=\"Password\" onChange={(e)=> setForm({...form, password: e.target.value}) }/>\r\n                    <small className=\"auth-error text-danger fst-italic\">{validationErr?.password&&form.password.length>1?validationErr.password:null}</small>\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary btn-registration mt-3\" onClick={handleSubmit} disabled={disabled}>Submit</button>\r\n            </fieldset>\r\n        </form>\r\n            </div>\r\n        </ErrorBoundary>\r\n    )\r\n}\r\nexport default Wrapper()(Auth)\r\n\r\n\r\n","import React, {useEffect, useState,Component} from \"react\";\r\nimport Wrapper from \"../../Engine/Wrapper\";\r\nimport {Validator} from \"../../Engine/index\";\r\nimport {ErrorPage, Loading} from \"../index\";\r\nimport {useHistory} from \"react-router\";\r\nimport \"./AuthStyles.css\"\r\nclass ErrorBoundary extends Component {\r\n    state = {ErrorExist: false}\r\n    componentDidCatch(error, errorInfo) {this.setState({ErrorExist: !this.state.ErrorExist})}\r\n    render() {\r\n        if (this.state.ErrorExist) {return <ErrorPage/>}\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nfunction Registration(props){\r\n    const [form,setForm] = useState({email:\"\",password:\"\",data:{city:\"\",phone:\"\",nick:\"\"}})\r\n    const [disabled,setDisabled] = useState(\"disabled\")\r\n    const [loading,setLoading] = useState(false)\r\n    const [error,setError] = useState(null)\r\n    const [success,setSuccess] = useState(null)\r\n    const validator = new Validator()\r\n    const history=useHistory();\r\n\r\n    useEffect(()=>{\r\n        let result = validator.validateRegistartion(form);\r\n        if(Object.keys(result).length===0){setDisabled(null)\r\n        }else{setDisabled(\"disabled\")}\r\n    },[form])\r\n\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        setLoading(true)\r\n        const data = props.engine.request(\"https://yermolaiev-movie-db.herokuapp.com/api/registration\",\"POST\",form)\r\n        data.then((data)=>{\r\n            setLoading(false)\r\n            setError(null)\r\n            setSuccess({status:true,message:data.message,time:5})\r\n\r\n            const promise = new Promise((resolve)=> {\r\n                    let timer;\r\n                    let timeout = setTimeout(()=>{\r\n                        timer = setInterval(()=>setSuccess({...success, time: success.time - 1}),1000)\r\n                    },5000)\r\n                clearInterval(timer);\r\n                clearTimeout(timeout)\r\n                    resolve()\r\n\r\n                }\r\n            )\r\n\r\n            promise.then((timer,timeout)=> {\r\n                history.push(\"/authentication\")\r\n            })\r\n        }).catch(err=>{\r\n            setLoading(false)\r\n            console.log(err)\r\n            setError(err)})\r\n    }\r\n\r\n    if(success?.status){return(\r\n        <>\r\n            <h1>{`${success?.message}`}</h1>\r\n            <h3>{`You will be redirected to login page via ${success.time} secconds...`}</h3>\r\n        </>) }\r\n    if(loading){return <Loading/>}\r\n    return(\r\n        <ErrorBoundary>\r\n        <form>\r\n            <fieldset>\r\n                <legend><h4 className={\"text-secondary fw-bold\"}>Registration new user</h4></legend>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"exampleInputEmail1\" className=\"form-label mt-4 fst-italic fs-7\">Email address</label>\r\n                    <input type=\"email\" className=\"form-control auth-input\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"\r\n                           placeholder=\"Enter email\"  onChange={(e)=>setForm({...form,email:e.target.value})}/>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"exampleInputPassword1\" className=\"form-label mt-2 fst-italic fs-7\">Password</label>\r\n                    <input type=\"password\" className=\"form-control auth-input\" id=\"exampleInputPassword1\" placeholder=\"Password\"\r\n                           onChange={(e)=>setForm({...form,password:e.target.value})}/>\r\n                    <small id=\"passHelp\" className=\"form-text text-muted\">Pay attention-only digits.</small>\r\n                </div>\r\n\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"inputDefault\" className=\"col-form-label mt-2 fst-italic fs-7\">Type your native city</label>\r\n                    <input type=\"text\" className=\"form-control auth-input\" placeholder=\"Where are you from\" id=\"inputDefault\"\r\n                           onChange={(e)=>setForm({...form,data: {...form.data, city:e.target.value}})}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"col-form-label mt-2 fst-italic\" htmlFor=\"inputDefault\">Type your number</label>\r\n                    <input type=\"text\" className=\"form-control auth-input\" placeholder=\"Phone number\" id=\"inputDefault\"\r\n                           onChange={(e)=>setForm({...form,data: {...form.data,phone:e.target.value}})}\r\n                    />\r\n                    <small id=\"passHelp\" className=\"form-text text-muted\">Pay attention-start from +380.</small>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label className=\"col-form-label mt-2 fst-italic\" htmlFor=\"inputDefault\">Type your nickname</label>\r\n                    <input type=\"text\" className=\"form-control auth-input\" placeholder=\"Nickname\" id=\"inputDefault\"\r\n                           onChange={(e)=>setForm({...form,data: {...form.data,nick:e.target.value}})}/>\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary btn-registration mt-3\" disabled={disabled} onClick={handleSubmit}>Register me!</button>\r\n                {error?\r\n                    <div className=\"alert alert-danger\" role=\"alert\">\r\n                        {error}\r\n                   </div>:null\r\n                }\r\n\r\n            </fieldset>\r\n        </form>\r\n        </ErrorBoundary>\r\n       )\r\n}\r\n\r\nexport default Wrapper()(Registration)\r\n\r\n\r\n","import React, {useState} from \"react\";\r\nimport {useHistory} from \"react-router\";\r\nimport Wrapper from \"../../Engine/Wrapper\";\r\nimport \"./Header.css\"\r\n\r\n\r\n\r\nconst Header=(props)=>{\r\n\r\n\r\n    const [buttons,setButtons]=useState(\"disabled\");\r\n    const [searchResults,setSearchResults] = useState([]);\r\n    const [query,setQuery] = useState(\"\");\r\n    const history = useHistory()\r\n\r\n    const searchHandler = (e,value) => {\r\n        if(value.length>=2){\r\n            setQuery(value)\r\n            setButtons(null)\r\n            setSearchResults([])\r\n            props.engine.getBySearch(null,value)\r\n                .then(data => {\r\n                    let temp=[]\r\n                    if (data.results.length===0){\r\n                        temp.push(<li className=\"list-group-item\" key={1}><small>No data of search</small></li>)\r\n                    }else{\r\n                        temp = data.results.map((item,index)=>{\r\n                            return(<li className=\"list-group-item\" key={index}\r\n                                       onClick={()=>{\r\n                                       fallingListCleaner(e)\r\n                                       history.push(`/movie_detail/${item.id}`)\r\n                            }}>{item.original_title}</li>)\r\n                        })\r\n                    }\r\n                       setSearchResults(temp)\r\n                   })\r\n        }else{\r\n            setQuery(value)\r\n            setButtons(\"disabled\")\r\n            setSearchResults([])\r\n        }\r\n    }\r\n    //after transmition to detail page of movie this function clear faling list\r\n    const fallingListCleaner=(e)=>{\r\n        e.target.value=\"\"\r\n        setSearchResults(null)\r\n    }\r\n    //go to searching result list\r\n    const buttonHandler = (e) => {\r\n        e.preventDefault()\r\n        history.push(`/search/1/${query}`)\r\n    }\r\n    //login and auth handler\r\n    const buttonAuthHandler = (e,event) => {\r\n    if(event===\"logout\"){\r\n        props.logout()\r\n        history.push(\"/\")\r\n    }\r\n    if(event===\"login\") {history.push(\"/authentication\")}\r\n    if(event===\"register\"){history.push(\"/registration\")}\r\n    }\r\n    //render data\r\n        return (\r\n            <nav className=\"navbar navbar-expand-sm navbar-light bg-light\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarColor03\">\r\n                        <ul className=\"navbar-nav me-auto\">\r\n                            {\r\n                                (!props.id&&!props.token)?<div className={\"header-button\"}>\r\n                                    <button className=\"btn btn-primary my-2 my-sm-0 auth-btn\" type=\"submit\" onClick={(e)=>buttonAuthHandler(e,\"login\")}>Login</button>\r\n                                    <span className={\"m-1\"}>or</span>\r\n                                    <button className=\"btn btn-primary my-2 my-sm-0 auth-btn\" type=\"submit\"\r\n                                                  onClick={(e)=>buttonAuthHandler(e,\"register\")}>Register</button>\r\n                                </div> : <button className=\"btn btn-primary my-2 my-sm-0 auth-btn\" type=\"submit\"\r\n                                                 onClick={(e)=>buttonAuthHandler(e,\"logout\")}>Logout</button>}\r\n                        </ul>\r\n                        <form className=\"d-flex\">\r\n                            <input className=\"form-control me-sm-2 search-input\" data-toggle=\"dropdown\" type=\"text\" placeholder=\"Type here\" onChange={(e)=>searchHandler(e,e.target.value)}/>\r\n                            <button className=\"btn btn-success my-2 my-sm-0 btn-search\" type=\"button\" disabled={buttons} onClick={buttonHandler}>Search</button>\r\n                                <ul className=\"list-group-search\" id=\"myList\">\r\n                                    {searchResults}\r\n                                </ul>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n\r\n\r\nexport default Wrapper()(Header)","let FETCH_MOVIE_REQUEST = ()=>{return{type:'FETCH_MOVIE_REQUEST',}}\r\nlet FETCH_MOVIE_LOAD = (movies)=>{return{type:'FETCH_MOVIE_LOADED', payload:movies}}\r\nlet FETCH_MOVIE_ERROR = (error)=>{return{type:'FETCH_MOVIE_ERROR', payload:error}}\r\n\r\nlet ADD_MOVIE = (data)=>{return{type:'ADD_MOVIE', payload:data}}\r\nlet REMOVE_MOVIE = (data)=>{return{type:'REMOVE_MOVIE', payload:data}}\r\n\r\nlet FETCH_MOVIE=(token,getFavorite,dispatch)=> {\r\n    dispatch(FETCH_MOVIE_REQUEST())\r\n    getFavorite(token)\r\n        .then((data) => {\r\n            dispatch(FETCH_MOVIE_LOAD(data.UserStorage))\r\n        })\r\n        .catch((err) => {\r\n            dispatch(FETCH_MOVIE_ERROR(err))\r\n        })\r\n}\r\n\r\nlet DELETE_MOVIE_FROM_FAVORITE=(token,engineRemoveFavorite,dispatch,data)=> {\r\n    dispatch(FETCH_MOVIE_REQUEST())\r\n    dispatch(REMOVE_MOVIE(data))\r\n    engineRemoveFavorite(token,data)\r\n        .then((data) => {\r\n            console.log(data)\r\n        })\r\n        .catch((err) => {\r\n            dispatch(FETCH_MOVIE_ERROR(err))\r\n        })\r\n}\r\nlet ADD_MOVIE_TO_FAVORITE=(token,engineAddFavorite,dispatch,movie_data)=> {\r\n    dispatch(FETCH_MOVIE_REQUEST())\r\n    dispatch(ADD_MOVIE(movie_data))\r\n    engineAddFavorite(token,movie_data)\r\n        .then((data) => {})\r\n        .catch((err) => {\r\n            dispatch(FETCH_MOVIE_ERROR(err))\r\n        })\r\n}\r\n\r\n\r\n    export {FETCH_MOVIE,ADD_MOVIE_TO_FAVORITE,DELETE_MOVIE_FROM_FAVORITE}\r\n","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Wrapper from \"../../Engine/Wrapper\";\r\nimport {useHistory} from \"react-router-dom\"\r\nimport \"./SideBar.css\"\r\nimport {connect} from \"react-redux\";\r\nimport {FETCH_MOVIE} from \"../../redux-store/action\";\r\n\r\nconst SideBar = (props) => {\r\n    //if token exist fetch favorite from request\r\n    if(props.token){props.getFavoriteMovie()}\r\n    const history = useHistory()\r\n    const generateId=()=>{\r\n        props.engine.getPopularMovies(random(1,500))\r\n            .then(data=> {\r\n                let temp = `/random_movie/${data.results[random(0, 19)].id}`\r\n               history.push(temp)\r\n            })\r\n            .catch(err=>err)\r\n    }\r\n\r\n    const random=(min,max)=> { return Math.trunc(Math.random() * (max - min) + min)}\r\n\r\n    return (\r\n        <div className=\"list-group\">\r\n            <li className=\"list-group-item sidebar list-group-item-action d-flex justify-content-between align-items-center text-decoration-none\" onClick={generateId}><span className=\"side-bar-text text-secondary\">Random movie</span></li>\r\n            <li className=\"list-group-item sidebar list-group-item-action d-flex justify-content-between align-items-center \"><Link to={\"/popular/1\"}><span className=\"side-bar-text text-secondary\">Popular</span></Link></li>\r\n            <li className=\"list-group-item sidebar list-group-item-action d-flex justify-content-between align-items-center\"><Link to={\"/genres\"}><span className=\"side-bar-text text-secondary\">Genres</span></Link></li>\r\n\r\n            {\r\n                (props.credentials) ?\r\n                    <>\r\n                            <span className=\"list-group-item sidebar list-group-item-action d-flex justify-content-between align-items-center\"><Link to={\"/favorite\"}><span className=\"side-bar-text text-secondary\">Favorite</span></Link></span>\r\n                    </> : <>\r\n                            <span className=\"list-group-item sidebar list-group-item-action disabled d-flex justify-content-between align-items-center\"><Link to={\"/favorite\"}><span className=\"side-bar-text text-secondary\">Favorite</span></Link></span>\r\n                    </>\r\n            }\r\n        </div>\r\n    )\r\n}\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    const {token,engineGetFavorite} = ownProps\r\n    return {getFavoriteMovie:()=>FETCH_MOVIE(token,engineGetFavorite,dispatch)}}\r\nexport default Wrapper()(connect(null,mapDispatchToProps)(SideBar));\r\n","export default __webpack_public_path__ + \"static/media/Loading.d1912aee.SVG\";","import React from \"react\";\r\nimport ico from'./Loading.SVG'\r\nexport default function Loading() {\r\nreturn(\r\n    <div>\r\n        <img src={ico} alt=\"error icon\"/>\r\n    </div>\r\n)\r\n}","import React from \"react\";\r\n\r\nconst ErrorPage = (props) => {\r\n    return (\r\n        <div className=\"row d-flex\">\r\n            <div className={\"row\"}>\r\n                <h1>Some terryfy error occured</h1>\r\n                <h3>{`Error details: ${props?.message}`}</h3>\r\n            </div>\r\n            <div className={\"row\"}>\r\n                <h1>Some terryfy error occured</h1>\r\n                <h3>We`re working on it fixing</h3>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default ErrorPage","import React,{useState,useEffect} from \"react\";\r\nimport \"./Pagination.css\"\r\nexport default function Pagination({current_page,total_page,itteractingWithPage}){\r\n    const [paginations,setPaginations] = useState([])\r\n\r\n    const createPagination=()=>{\r\n        let arr=[]\r\n        //2 type of offset\r\n        //1- from beginning next from end\r\n        if (total_page===1) {\r\n            return [current_page]\r\n        }\r\n\r\n        for(let i=current_page;i>=current_page-2;i--){\r\n            arr.push(i)\r\n            if(i===1)break\r\n        }\r\n        let shift = 3-arr.length;\r\n        if(shift===0){\r\n            for(let i=current_page+1;i<=current_page+2;i++){\r\n                arr.push(i)\r\n            if(i===total_page)break;\r\n        }}else{\r\n            for(let i=current_page+1;i<=current_page+2+shift;i++) {\r\n                arr.push(i)\r\n                if (i === total_page) break;\r\n            }\r\n        }\r\nreturn arr.sort((a,b)=>a-b)}\r\n\r\n\r\n    useEffect(()=>{\r\n        if(current_page&&total_page){\r\n            const arr = createPagination()\r\n            const newArr = arr.map((item,index)=>{\r\n                if(item===current_page){\r\n                    return(\r\n                        <li className=\"page-item active m-2\" key={index} onClick={()=>itteractingWithPage(item)}>\r\n                            <span className=\"page-link\">{item}</span>\r\n                        </li>\r\n                    )\r\n                }\r\n                return(\r\n                    <li className=\"page-item m-2\" key={index} onClick={()=>itteractingWithPage(item)}>\r\n                        <span className=\"page-link\">{item}</span>\r\n                    </li>\r\n                )\r\n\r\n            })\r\n            setPaginations([...newArr])\r\n                }\r\n\r\n    },[current_page,total_page])\r\n\r\n    return(\r\n        <div>\r\n        <ul className=\"pagination\">\r\n            {paginations}\r\n        </ul>\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\n","import React, {useState, useEffect, Component} from \"react\";\r\nimport {useHistory} from \"react-router\";\r\nimport {Loading, ErrorPage} from \"../../../index\";\r\nimport \"./DisplayGenres.css\"\r\n\r\n//error boundary for prevend bug and display error page\r\nclass ErrorBoundary extends Component {\r\n    state = {ErrorExist: false}\r\n    componentDidCatch(error, errorInfo) {this.setState({ErrorExist: !this.state.ErrorExist})}\r\n    render() {if (this.state.ErrorExist) {return <ErrorPage/>}return this.props.children;}}\r\n\r\nlet GenresCategorie = (props) => {\r\n    const [data, setData] = useState({data: false, loading: false, error: false})\r\n    const history = useHistory();\r\n    //all time in render need only one time to updata render page\r\n    useEffect(() => {\r\n        setData({data: false, loading: true, error: false})\r\n        props.getData()\r\n            .then((data) => {\r\n                let temp = data.genres.map((item, index) => {\r\n                    return (\r\n                        <div className={\"col\"} key={index}>\r\n                            <div className=\"card text-center m-1 genres-card\">\r\n                                <div className=\"card-body\">\r\n                                    <h5 className=\"card-title genres-card fst-italic\"\r\n                                        onClick={() => history.push(`/genre/1/${item.id}`)}>{item.name}</h5>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })\r\n                setData({data: temp, loading: false, error: false})\r\n            })\r\n            .catch((err) => {setData({data: false, loading: false, error: err.message})})\r\n    }, [])\r\n    //Defend self from mistake and render required component\r\n    if (data.error||!data.data) {return <ErrorPage message={data.error}/>}\r\n    if (data.loading) {return <Loading/>}\r\n    return (\r\n        <ErrorBoundary>\r\n            <div className={\"container-fluid\"}>\r\n                <div className=\"card text-center m-1\">\r\n                    <h3 className={\"genre-header fw-bold fst-italic\"}>Please select category:</h3>\r\n                </div>\r\n                <div className={\"row \"}>\r\n                    {data.data}\r\n                </div>\r\n            </div>\r\n        </ErrorBoundary>\r\n    )\r\n}\r\nexport default GenresCategorie;","import React,{Component} from \"react\";\r\nimport {Loading,ErrorPage} from \"../../index\";\r\n\r\n\r\nlet DisplayItems = (View) => {\r\n    //receive item to view component from fork and render with data in class-DisplayItems\r\n    return class DisplayItems extends Component {\r\n        //state proclaim\r\n        state = {\r\n            data: null,\r\n            error:false,\r\n            loading:false,\r\n            current_page:1,\r\n            total_page:null,\r\n            search:null\r\n        }\r\n        getParamsPage=()=>{\r\n        //retrive parametrs from url and return them to make correct request\r\n            let page=this.props.match.params.page;\r\n            let search=this.props.match.params.id;\r\n            return {page,search}\r\n        }\r\n        componentDidMount() {\r\n\r\n            //depend from params claa fetch with requiered params\r\n            let {page,search} = this.getParamsPage()\r\n            this.setState({loading: true, search: search,current_page:page})\r\n            if(search!==\"undefined\"){this.fetchData(page, search)}else{this.fetchData(page)}\r\n        }\r\n        componentDidUpdate(prevProps, prevState) {\r\n           //Componnent depend 0n get data from props and state current page so put it in dependecies for update\r\n             if(this.state.current_page!==prevState.current_page||this.props.getData!==prevProps.getData||this.props.match.params.id!==prevProps.match.params.id){\r\n                 this.setState((state)=>({loading:true,search:this.props.match.params.id}))\r\n                 if(this.state.search!==\"undefined\"){this.fetchData(this.state.current_page,this.state.search)}else{this.fetchData(this.state.current_page)}\r\n\r\n             }\r\n        }\r\n        //function for data fetch and state tune\r\n        fetchData(page,search){\r\n                this.props.getData(page,search).then((data)=>{\r\n                        this.setState((state)=>({\r\n                        data: data.results,\r\n                        error:false,\r\n                        loading:false,\r\n                        current_page:data.page,\r\n                        total_page:data.total_pages\r\n                    }))\r\n                }).catch(error=> this.setState({\r\n                    data: null,\r\n                    error:true,\r\n                    loading:false,\r\n                    current_page:null,\r\n                    total_page:null\r\n                }))\r\n        }\r\n        //function transmitted to pagination for switching lists\r\n        itteractingWithPage = (item) =>{this.setState((state)=>({current_page:item}))}\r\n        render() {\r\n            //destruct required data to render and transmit to component\r\n            let {error,data,current_page,total_page} = this.state;\r\n            if (error) return <ErrorPage/>\r\n            if (!data) return <Loading/>\r\n            return (<View\r\n                data={data}\r\n                current_page={current_page}\r\n                total_page={total_page}\r\n                itteractingWithPage={this.itteractingWithPage} />)\r\n        }\r\n    }\r\n}\r\n\r\nexport default DisplayItems;","import React from \"react\";\r\nimport {useHistory} from \"react-router\";\r\nimport {Buttons} from \"./../../index\"\r\nimport \"./MovieCardSmall.css\"\r\n\r\n\r\nconst MovieCardSmall=(props)=>{\r\n    const {data} = props\r\n    const history = useHistory();\r\n    const handleToDetail=(id)=>{history.push(`/movie_detail/${id}`)}\r\n    return(\r\n        <div className=\"col d-flex mt-1\">\r\n        <div className=\"card m-0\">\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title fw-bold\">{data.original_title}</h5>\r\n                <img width={200} height={300} src={`https://www.themoviedb.org/t/p/w300_and_h450_bestv2/${data.poster_path}`} alt={\"some picture\"}/>\r\n                <p className=\"card-text fs-6 fst-italic\" >{`${data.overview.substring(0,50)} ...`}</p>\r\n                <p className=\"card-text fs-5\">Movie Rate: {data.vote_average}</p>\r\n                <button type=\"button\" className=\"btn btn-secondary more-detail\" onClick={()=>handleToDetail(data.id)}>More detail</button>\r\n                <Buttons movie_data={data}/>\r\n            </div>\r\n        </div>\r\n       </div>\r\n    )\r\n}\r\n\r\nexport default MovieCardSmall\r\n\r\n\r\n\r\n","import React, {Component,useState,useEffect} from 'react';\r\nimport {ErrorPage, Pagination} from \"../../index\";\r\nimport MovieCardSmall from \"../MovieCards/MovieCardSmall\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {ErrorExist: false}\r\n    componentDidCatch(error, errorInfo) {\r\n        this.setState({ErrorExist: !this.state.ErrorExist})\r\n    }\r\n    render() {if (this.state.ErrorExist) {return <ErrorPage/>}\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nconst ItemList = (props) => {\r\n    const [toRender,setToRender]=useState()\r\n    useEffect(()=>{render(props.data)},[props.data])\r\n    const render=(data)=>{\r\n        const transformData = data ? data.map((item, index) => {\r\n            return (<MovieCardSmall data={item} key={index} />)}) : null;\r\n        if (!props.data) return (<div>Sorry nothing to display</div>)\r\n        setToRender(transformData)\r\n    }\r\n    return (\r\n        <ErrorBoundary>\r\n            <div className=\"container\">\r\n                <ErrorBoundary>\r\n                    <Pagination current_page={props.current_page} total_page={props.total_page} itteractingWithPage={props.itteractingWithPage}/>\r\n                    <div className=\"row row-col-4\">\r\n                        {toRender}\r\n                    </div>\r\n                    <Pagination current_page={props.current_page} total_page={props.total_page} itteractingWithPage={props.itteractingWithPage}/>\r\n                </ErrorBoundary>\r\n            </div>\r\n        </ErrorBoundary>\r\n    )\r\n}\r\n\r\nexport default ItemList\r\n","import React from 'react';\r\nimport \"./ItemCardDetails.css\"\r\nconst ItemCardDetails=({data})=>{\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"card card-head row mb-3 mt-3\">\r\n                    <h3 className=\"card-header fw-bold\">{data.original_title}</h3>\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title fst-italic\">{`Motto: ${data.title}`}</h5>\r\n                        <h6 className=\"card-subtitle text-muted fst-italic\">{`Released: ${data.release_date}`}</h6>\r\n                    </div>\r\n                </div>\r\n            <div className=\"row g-0\">\r\n                <div className=\"col-md-4\">\r\n                    <img src={data.backdrop_path} className=\"img-fluid rounded-start\" alt={data.original_title}/>\r\n                </div>\r\n                <div className=\"col-md-8\">\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title fw-bold\">Main information:</h5>\r\n                        <ul className=\"list-group list-group-flush\">\r\n                            <li className=\"list-group-item\">{`Genres: ${data.genres.map(item=>item.name)}`}</li>\r\n\r\n                            <li className=\"list-group-item\">{`Budget: ${data.budget}`}</li>\r\n                            <li className=\"list-group-item\">{`Revenue: ${data.revenue}`}</li>\r\n                            <li className=\"list-group-item\">{`Average vote : ${data.vote_average}`}</li>\r\n                            <li className=\"list-group-item\">{`Popularity : ${data.popularity}`}</li>\r\n                            <li className=\"list-group-item\">{`Duration : ${data.runtime}`}</li>\r\n                            <li className=\"list-group-item\">{`Production companies : ${data.production_companies.map(item=>item.name)}`}</li>\r\n                            <li className=\"list-group-item\">{`Movie id : ${data.id}`}</li>\r\n                            <li className=\"list-group-item\">{`Age limit to view : ${data.adult?\"Yes\":\"Nope\"}`}</li>\r\n                            <li className=\"list-group-item\">{`Original leandue: ${data.original_language}`}</li>\r\n                        </ul>\r\n                </div>\r\n            </div>\r\n                <div className=\"card row mt-2 mb-3\">\r\n                    <div className=\"card-body\">\r\n                        <p className=\"card-text fst-italic fs-6\">{data.overview}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default ItemCardDetails;\r\n","import React, {useState, useEffect} from 'react';\r\nimport {useHistory} from \"react-router-dom\"\r\n\r\nconst RecomendationCard=({recommendations,getImage})=>{\r\n    const [dataToRender,setDataToRender] = useState([])\r\n    const history = useHistory()\r\n    const MoreDetailHandler=(e,id)=>{history.push(`/movie_detail/${id}`)}\r\n\r\n    const toRender=(recommendations)=>{\r\n        let result=[]\r\n        if(!recommendations) {\r\n            return\r\n        }else{\r\n            result = recommendations.results.map((item,index)=>{\r\n            let itemId = item.id\r\n            return(\r\n                <div className=\"col\" key={index}>\r\n                    <div className=\"card\" style={{width: \"9rem\"}}>\r\n                        <img src={getImage(item.backdrop_path)} className=\"card-img-top\" alt={item.original_title}/>\r\n                        <div className=\"card-body\">\r\n                            <h6 className=\"card-title text-center\">{item.original_title}</h6>\r\n                            <button type=\"button\" className=\"btn btn-primary btn-component\" onClick={(e)=>MoreDetailHandler(e,itemId)}>More details</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n        }\r\n        setDataToRender([...result])\r\n    }\r\n\r\n\r\n    useEffect(()=>{toRender(recommendations)},[recommendations])\r\n    return(\r\n        <div className=\"row row-cols-5\">\r\n            {dataToRender}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RecomendationCard;\r\n","import React, { Component } from 'react';\r\nimport {withRouter} from \"react-router\";\r\nimport {Buttons, ErrorPage, Loading} from \"../../index\"\r\nimport ItemCardDetails from \"../MovieCards/ItemCardDetails\"\r\nimport RecomendationCard from \"../MovieCards/RecomendationCard\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {ErrorExist: false}\r\n    componentDidCatch(error, errorInfo) {this.setState({ErrorExist: !this.state.ErrorExist})}\r\n    render() {\r\n        if (this.state.ErrorExist) {return <ErrorPage/>}\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\n class MovieDetails extends Component {\r\n     state={id:null, recommendations:null,data:null, loading:false, error:false};\r\n     componentDidMount(){\r\n         let id = this.getId()\r\n         this.setState({id:id,data:null,loading:true,error:false})\r\n         this.fetchData(id)\r\n     }\r\n     //mounting and fetch data depend on request type\r\n     componentDidUpdate(prevProps, prevState, snapshot) {\r\n         if(this.props.match.params.id!==prevProps.match.params.id){\r\n             this.fetchData(this.props.match.params.id)}}\r\n\r\n     componentDidCatch(error, errorInfo) {this.setState({error:!this.state.error})}\r\n\r\n     onError=(err)=>{this.setState({...this.state, error:err})}\r\n     getId=()=>{return this.props.match.params.id}\r\n     fetchData=(id)=>{\r\n         let urls = [this.props.getData(id),this.props.getRecommendations(id)]\r\n         Promise.all(urls)\r\n             .then(results=>{\r\n                 results.forEach((item,index)=>{\r\n                     if(index===0) {\r\n                         item.backdrop_path=this.props.getImage(item.poster_path)\r\n                         this.setState({data:item})\r\n                     }\r\n                     if(index===1) {\r\n                         item.results.forEach((el=>{\r\n                             this.setState({recommendations:item,loading:false})\r\n                         }))\r\n                     }\r\n                 })\r\n             })\r\n             .catch((err)=> this.onError(err))\r\n     }\r\n      render(){\r\n        if (!this.state.data){return <Loading/>}\r\n        if (this.state.error){return <ErrorPage/>}\r\n        if (this.state.loading||!this.state.data){return <Loading/>}\r\n        const {data,recommendations} = this.state;\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <ErrorBoundary>\r\n                <ItemCardDetails data={data}/>\r\n                <Buttons movie_id={data.id} movie_data={data}/>\r\n                    <div className=\"container-fluid\">\r\n                        <h3 className={\"fw-bold\"}>The Same movie</h3>\r\n                        <RecomendationCard recommendations={recommendations} getImage={this.props.getImage}/>\r\n                    </div>\r\n                </ErrorBoundary>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default withRouter(MovieDetails)\r\n","import React,{useState,useEffect} from \"react\";\r\nimport \"./Button.css\"\r\nimport {ADD_MOVIE_TO_FAVORITE, DELETE_MOVIE_FROM_FAVORITE} from \"../../../redux-store/action\";\r\nimport Wrapper from \"../../../Engine/Wrapper\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst Buttons = (props) => {\r\n\r\n    const {movie_data, removeFromFavorite, addToFavorite,token} = props\r\n    const [buttonState,setButtonState] = useState({add:\"disabled\",remove:\"disabled\"})\r\n    //render element depend on condition from store\r\n    const find=(id)=>{\r\n        let index=-1;\r\n         for(let i=0;i<props.movies.length;i++){\r\n             if(props.movies[i]?.id === id){\r\n                 index=i;\r\n             }\r\n         }\r\n        return index;\r\n    }\r\n    const changeButton = () =>{\r\n        if(props.movies===undefined||props.movies===null)return;\r\n        if(!token) {setButtonState({add:\"disabled\",remove:\"disabled\"})};\r\n        const idx=find(movie_data.id);\r\n        if(idx>=0){setButtonState({add:\"disabled\",remove:\"\"})\r\n        }else{\r\n            setButtonState({add:\"\",remove:\"disabled\"})}\r\n    }\r\n    useEffect(()=>changeButton(),[props.movies])\r\n\r\n\r\n    //add favorite and switch button statoos\r\n    const actionsAdd=()=>{\r\n          addToFavorite()\r\n          setButtonState({add:\"disabled\",remove:\"\"})\r\n    }\r\n    //remove favorite and switch button status\r\n    const actionsRemove=()=>{\r\n           removeFromFavorite()\r\n           setButtonState({add:\"\",remove:\"disabled\"})\r\n    }\r\n    //component render\r\n    if(props.token) {\r\n        return (\r\n            <>\r\n                <button type=\"button\" className=\"btn btn-primary btn-component\" disabled={buttonState.add} onClick={() => actionsAdd()}>Add to favorite</button>\r\n                <button type=\"button\" className=\"btn btn-primary btn-component\" disabled={buttonState.remove} onClick={() => actionsRemove()}>Remove from favorite</button>\r\n            </>\r\n        )\r\n    }else{ return (\r\n        <>\r\n            <button type=\"button\" className=\"btn btn-primary btn-component\" disabled={\"disabled\"}>Add to favorite</button>\r\n            <button type=\"button\" className=\"btn btn-primary btn-component\" disabled={\"disabled\"}>Remove from favorite</button>\r\n            <div className=\"alert alert-warning\" role=\"alert\">Please login or register account for save in favorite current movie</div>\r\n        </>\r\n    )}\r\n   ;\r\n\r\n};\r\nconst mapStateToProps=({movies,loading,errors})=>{return {movies,loading,errors}}\r\nconst mapDispatchToProps=(dispatch, ownProps)=>{\r\n    const {token,engineRemoveFavorite,engineAddFavorite,movie_data} = ownProps;\r\n    return{\r\n        removeFromFavorite:()=>DELETE_MOVIE_FROM_FAVORITE(token,engineRemoveFavorite,dispatch,movie_data),\r\n        addToFavorite:()=>ADD_MOVIE_TO_FAVORITE(token,engineAddFavorite,dispatch,movie_data)\r\n    }\r\n}\r\nexport default Wrapper()(connect(mapStateToProps,mapDispatchToProps)(Buttons))\r\n","import React, {useState, useEffect, Component} from \"react\";\r\nimport {useHistory} from \"react-router\";\r\nimport {ErrorPage} from \"../../index\";\r\nimport Buttons from \"../../Auxilary/Buttons/Buttons\";\r\n\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {ErrorExist: false}\r\n    componentDidCatch(error, errorInfo) {\r\n        this.setState({ErrorExist: !this.state.ErrorExist})\r\n    }\r\n    render() {\r\n        if (this.state.ErrorExist) {return <ErrorPage/>}\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nconst DisplayFavorite = (props) => {\r\n    const [toRender, setToRender] = useState([]);\r\n    const history = useHistory()\r\n    useEffect(() => renderItem(props.data), [props.data])\r\n    const getImg=(id)=>{return `https://www.themoviedb.org/t/p/w300_and_h450_bestv2${id}`}\r\n    const handleToDetail = () => {history.push(`/movie_detail/${props.data.id}`)}//to detail page of favorite componnent\r\n    const renderItem = (data) => {\r\n        let temp = null;\r\n        if(!data){\r\n            temp =[<div key={1}>No favorite in you list</div>]\r\n        }else{\r\n            temp = data.map((item, index) => {\r\n                    return (\r\n\r\n                        <div className=\"col d-flex mt-1\" key={index}>\r\n                            <div className=\"card\">\r\n                                <div className=\"card-body\">\r\n                                    <h5 className=\"card-title\">{item.original_title}</h5>\r\n                                    <img width={150} height={230} alt={\"some picture\"} src={getImg(item.poster_path)}/>\r\n                                    <div className={\"card-text\"}>\r\n                                        <button type=\"button\" className=\"btn btn-primary btn-component\" onClick={()=>handleToDetail(props.data.id)}>More details</button>\r\n                                        <Buttons movie_id={item.id} movie_data={item}/>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    )\r\n                }\r\n            )\r\n        }\r\n\r\n        setToRender(temp)\r\n    }\r\n\r\n    return (<div className={\"row row-cols-3\"}>\r\n            <ErrorBoundary>\r\n        {toRender}\r\n            </ErrorBoundary>\r\n    </div>)\r\n}\r\nexport default DisplayFavorite;\r\n","import React, {Component} from \"react\";\r\nimport {Loading, ErrorPage} from \"../../index\";\r\nimport DisplayFavorite from \"./DisplayFavorite\";\r\nimport {connect} from \"react-redux\";\r\nclass ErrorBoundary extends Component {\r\n    state = {ErrorExist: false}\r\n    componentDidCatch(error, errorInfo) {this.setState({ErrorExist: !this.state.ErrorExist})}\r\n    render() {\r\n        if (this.state.ErrorExist) {return <ErrorPage/>}\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nconst FetchFavorite = (props) => {\r\n    //if list of favorite empty display this\r\n    if (props.movies.error) {return <ErrorPage/>}\r\n    if (props.movies.loading) {return <Loading/>}\r\n    if (props.movies.length === 0) {return (<div className={\"container-fluid\"}><div className=\"alert alert-primary\" role=\"alert\">Favorite list is empty please add some movie</div></div>)}\r\n    return (\r\n        <div className={\"container-fluid\"}>\r\n            <ErrorBoundary>\r\n                <DisplayFavorite data={props.movies}/>\r\n            </ErrorBoundary>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps=({movies, loading, errors})=>{return {movies, loading, errors}}\r\nexport default connect(mapStateToProps)(FetchFavorite);\r\n","import Wrapper from \"./../../Engine/Wrapper\"\r\nimport GenresCategorie  from \"./ItemList/Genres/DisplayGenres\"\r\nimport DisplayItems from \"./ItemList/DisplayItemList\";\r\nimport ItemList from \"./ItemList/ItemList\"\r\nimport MovieDetails from \"./MovieItem/MovieDetails\";\r\nimport FetchFavorite from \"./MyFavorite/FetchFavorite\";\r\n\r\nconst getByGenre=(engine)=>{return {getData:engine.getByGenre,getImage:engine.getImg}}\r\nconst getBySearch=(engine)=>{return {getData:engine.getBySearch,getImage:engine.getImg}}\r\nconst getByPopular=(engine)=>{return {getData:engine.getPopularMovies,getImage:engine.getImg}}\r\nconst getDetails=(engine)=>{return {getRecommendations:engine.getRecommendations,getData:engine.getMovieDetails,getImage:engine.getImg}}\r\nconst getFavorite=(engine)=>{return {getData:engine.getMovieDetails,getImage:engine.getImg}}\r\n\r\nconst ShowFavorite = Wrapper(getFavorite)(FetchFavorite)\r\nconst SearchMovies = Wrapper(getBySearch)(DisplayItems(ItemList))\r\nconst PopularMovies = Wrapper(getByPopular)(DisplayItems(ItemList))\r\nconst GenresMovies = Wrapper(getByGenre)(DisplayItems(ItemList))\r\nconst GenresCategories = Wrapper(getByGenre)(GenresCategorie)\r\nconst MovieDetail = Wrapper(getDetails)(MovieDetails)\r\nexport  {GenresMovies,GenresCategories,SearchMovies,PopularMovies,MovieDetail,ShowFavorite};\r\n","import React from 'react';\r\nimport {Switch, Route, Redirect, BrowserRouter} from 'react-router-dom';\r\nimport {Header,Auth,Registration,SideBar,GenresCategories,SearchMovies,PopularMovies,GenresMovies,MovieDetail,ShowFavorite} from \"./../Pages\"\r\nconst ApiRouter = (credentials) => {\r\n\r\n   if (credentials) {\r\n        return (\r\n            <BrowserRouter>\r\n                <Header/>\r\n                <div className=\"container\">\r\n                    <div className={\"row justify-content-around mt-3\"}>\r\n                    <div className=\"col-3\">\r\n                        <SideBar credentials={credentials}/>\r\n                    </div>\r\n                    <div className=\"col-9\">\r\n                        <Route path=\"/movie_detail/:id\" exact render={MovieDetail}/>\r\n                        <Route path='/random_movie/:id' exact render={MovieDetail}/>\r\n                        <Route path='/genres' exact render={GenresCategories}/>\r\n                        <Route path='/genre/:page/:id' exact render={GenresMovies}/>\r\n                        <Route path='/search/:page/:id' exact render={SearchMovies}/>\r\n                        <Route path='/popular/:page' exact render={PopularMovies}/>\r\n                        <Route path='/favorite' exact render={ShowFavorite}/>\r\n                        <Redirect to=\"/popular/1\"/>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </BrowserRouter>\r\n        )\r\n    } else {\r\n        //else restricted list of routes\r\n        return (\r\n            <BrowserRouter>\r\n                <Header/>\r\n                <div className=\"container\">\r\n                    <div className={\"row justify-content-around mt-3\"}>\r\n                    <div className=\"col-3 left-bar\">\r\n                        <SideBar credentials={credentials}/>\r\n                    </div>\r\n                    <div className=\"col-9 right-bar\">\r\n                        <Switch>\r\n                            <Route path='/popular/:page' exact render={PopularMovies}/>\r\n                            <Route path='/favorite' exact render={ShowFavorite}/>\r\n                            <Route path=\"/movie_detail/:id\" exact render={MovieDetail}/>\r\n                            <Route path='/random_movie/:id' exact render={MovieDetail}/>\r\n                            <Route path='/genres' exact render={GenresCategories}/>\r\n                            <Route path='/genre/:page/:id' exact render={GenresMovies}/>\r\n                            <Route path='/search/:page/:id' exact render={SearchMovies}/>\r\n                            <Route path='/authentication' exact render={Auth}/>\r\n                            <Route path=\"/registration\" exact render={Registration}/>\r\n                            <Redirect to=\"/popular/1\"/>\r\n                        </Switch>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </BrowserRouter>\r\n        )\r\n    }\r\n}\r\nexport default ApiRouter;\r\n/*\r\n<Route path='/genres' exact render={DisplayGenresCategories}/>\r\n\r\n\r\n                            <Redirect to=\"/popular/1\"/>\r\n\r\n                            <Route path='/random_movie/:id' exact render={MovieById}/>\r\n                        <Route path='/favorite/:page' exact render={FavoriteItemsList}/>\r\n                        <Route path=\"/movie_detail/:id\" exact render={getMovieById}/>\r\n\r\n\r\n                                               <Route path='/genre/:page/:id' exact render={GenresItemsList}/>\r\n                            <Route path='/popular/:page' exact render={PopularItemList}/>\r\n                            <Route path='/search/:page/:id' exact render={SearchItemList}/>\r\n\r\n                                                    <Route path='/genres' exact render={DisplayGenresCategories}/>\r\n\r\n                        <Route path='/genre/:page/:id' exact render={GenresItemsList}/>\r\n                        <Route path='/popular/:page' exact render={PopularItemList}/>\r\n                        <Route path='/search/:page/:id' exact render={SearchItemList}/>\r\n\r\n*/\r\n","import {useEffect,useState,useCallback} from 'react'\r\nimport {Engine} from \"./index\";\r\n\r\n const AuthentificationEngine =()=>{\r\n    const [token, setToken] = useState(null)\r\n    const [id, setId] = useState(null)\r\n    const storeName=\"user\";\r\n    const {request} = new Engine();\r\n    //here tune data from favorite and makes all obligatory manipulations with DB\r\n     const engineRemoveFavorite=useCallback((token,movieData)=>{ return request(\"https://yermolaiev-movie-db.herokuapp.com/api/remove-favorite\",\"POST\",{movie: movieData},{credentials:`bearer ${token}`})},[request])\r\n     const engineAddFavorite=useCallback((token,movieData)=>{return request(\"https://yermolaiev-movie-db.herokuapp.com/api/add-favorite\",\"POST\", {movie: movieData},{credentials:`bearer ${token}`})},[request])\r\n     const engineGetFavorite=useCallback((token)=>{ return request(\"https://yermolaiev-movie-db.herokuapp.com/api/get-favorite\",\"GET\",null,{credentials:`bearer ${token}` })},[request])\r\n\r\n     const login=useCallback((token,id)=>{\r\n         setToken(token);setId(id);\r\n         localStorage.setItem(storeName,JSON.stringify({token,id}))\r\n      },[])\r\n\r\n      const logout=useCallback(()=>{\r\n        setToken(null);setId(null);\r\n        localStorage.clear()\r\n      },[])\r\n/*\r\nWhen we reload page data from state will erase\r\n then why we dowland from local storage\r\nfor this, to iluminate when after reload user can be logouted\r\n*/\r\n     useEffect(()=>{\r\n         let localStorageData = JSON.parse(localStorage.getItem(storeName));\r\n          if(localStorageData?.token&&localStorageData?.id){\r\n              login(localStorageData.token,localStorageData.id)\r\n          }\r\n     },[login])\r\n\r\nreturn {login,logout,id,token,engineRemoveFavorite,engineAddFavorite,engineGetFavorite}\r\n}\r\nexport default AuthentificationEngine\r\n","export default class Validator {\r\n    schema = {\r\n        email: /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/,\r\n        password: /(?=.*[0-9]){6,}/g,\r\n        phone: /^\\+380[0-9]{9}$/,\r\n        string: /[A-Za-z]{3,}/\r\n    }\r\n    #results = {}\r\n    validateLogin = (data) => {\r\n        if (data.length === 0) {\r\n            return this.#results.push({dataError: true})\r\n        }\r\n        const email = this.schema.email.test(data.email);\r\n        const password = this.schema.password.test(data.password);\r\n        if (!email) {this.#results.email=\"email not correct\"}\r\n        if (!password) {this.#results.password= \"password not correct\"}\r\n\r\n        return this.#results;\r\n    }\r\n\r\n    validateRegistartion=(data)=>{\r\n        this.#results = {}\r\n        this.validateLogin(data)\r\n        let phone = this.schema.phone.test(data.data.phone);\r\n        let nick = this.schema.string.test(data.data.nick);\r\n        let city = this.schema.string.test(data.data.city);\r\n        if(!phone){this.#results.phone=\"phone not correct\"}\r\n        if(!nick){this.#results.nick= \"nick not correct\"}\r\n        if(!city){this.#results.city= \"city not correct\"}\r\n        let result = this.#results;\r\n        return result;\r\n    }\r\n}","import React from 'react'\nimport \"./App.css\"\nimport store from \"./redux-store/store\";\nimport {ApiRouter, AuthentificationEngine, Provider} from \"./Engine\";\nimport {Provider as ReduxProvider} from \"react-redux\"\n\nconst App = () => {\n    /*The first step check presenting data in local storage and state,\n    -if data exist  and store loaded -ok\n    -if data exist but store missed -load\n    -store exist if but data nope -delete credentials\n    -if store not exist-delete credentials load store\n    */\n    //check on credetials presents\n    //and call router function with rendered route in advance depend on credetials\n\n    const methods = {...AuthentificationEngine()}\n    const apiRouter = ApiRouter(methods.token !== null && methods.id !== null)\n    return (\n        <div className={\"container-fluid\"}>\n            <ReduxProvider store={store}>\n                <Provider value={methods}>\n                    {apiRouter}\n                </Provider>\n            </ReduxProvider>\n        </div>\n    )\n}\n\nexport default App\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n\n"],"sourceRoot":""}